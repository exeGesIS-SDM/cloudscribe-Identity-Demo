@model cloudscribe_identity_demo.ViewModels.PBIReportViewModel
@inject IProjectSettingsResolver settingResolver
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject ISiteContextResolver siteResolver
@inject IPowerBIEmbedder _embedder;

@using System.Threading
@using System.Linq
@using cloudscribe_identity_demo.EmbedWeb

@functions{
}

@{
    ViewData["Title"] = "Power BI Embed Demo";

    var Tenant = await siteResolver.ResolveSite(Context.Request.Host.Host, Context.Request.Path);

    var projSettings = await settingResolver.GetCurrentProjectSettings(CancellationToken.None);

    // test values
    // Guid workspaceId = Guid.Parse("2ba8e729-5be5-4d5d-bfb1-8f591e6cf1cf");  
    // Guid reportId = Guid.Parse("c81a9dc0-4df1-469d-8333-9852d18360c6");

    //////////////////
    // JK - this makes no sense - why does the content template system process this render view
    // when you are just trying to create a new one - which should just use the edit template?
    if (Model.GroupId == null || Model.GroupId == Guid.Empty || Model.ReportId == null || Model.ReportId == Guid.Empty) return; 
    ///////////////////

    Guid workspaceId    = (Guid)Model.GroupId;  
    Guid reportId       = (Guid)Model.ReportId;
    EmbedInfo embedInfo = new EmbedInfo();
    string error        = "";

    try {
        embedInfo = await _embedder.GetEmbedInfo(workspaceId, reportId);

        if (!string.IsNullOrWhiteSpace(Model.PageId))
            embedInfo.EmbedUrl = $"{embedInfo.EmbedUrl}&pagename={Model.PageId}";

        embedInfo.EmbedUrl = $"{embedInfo.EmbedUrl}&navContentPaneEnabled=false";
    }
    catch(Exception ex)
    {
        error = ex.Message;
    }

}

<div class="content-top">
    @Html.Raw(Model.ContentAbove)
</div>

<div id="embedconfig" 
    data-embedtoken=@embedInfo.AccessToken 
    data-embedurl=@embedInfo.EmbedUrl 
    data-reportid=@embedInfo.ReportId>
</div>


@if (!string.IsNullOrWhiteSpace(error))
{
    <div class="text-danger">@error</div>
}

@if (!string.IsNullOrWhiteSpace(Model.ReportCode))
{
    <div id="report-code">
        <p>Report Code: <strong>@Model.ReportCode</strong></p>
    </div>
}

<div id="reportContainer" style="width: 80%; height: 700px;"></div>

<div class="mt-3 content-bottom">
    @Html.Raw(Model.ContentBelow)
</div>



<div class="hide_me mt-2">
<hr />
<p>
<b>Diagnostics:</b>
<p>
Embed URL:  @embedInfo.EmbedUrl 
<p>
Report Id: @embedInfo.ReportId
<p>
Embed Token: @embedInfo.AccessToken 

</div>

